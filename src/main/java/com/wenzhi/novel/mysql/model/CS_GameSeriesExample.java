package com.wenzhi.novel.mysql.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CS_GameSeriesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    public CS_GameSeriesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSerienameIsNull() {
            addCriterion("SerieName is null");
            return (Criteria) this;
        }

        public Criteria andSerienameIsNotNull() {
            addCriterion("SerieName is not null");
            return (Criteria) this;
        }

        public Criteria andSerienameEqualTo(String value) {
            addCriterion("SerieName =", value, "seriename");
            return (Criteria) this;
        }

        public Criteria andSerienameNotEqualTo(String value) {
            addCriterion("SerieName <>", value, "seriename");
            return (Criteria) this;
        }

        public Criteria andSerienameGreaterThan(String value) {
            addCriterion("SerieName >", value, "seriename");
            return (Criteria) this;
        }

        public Criteria andSerienameGreaterThanOrEqualTo(String value) {
            addCriterion("SerieName >=", value, "seriename");
            return (Criteria) this;
        }

        public Criteria andSerienameLessThan(String value) {
            addCriterion("SerieName <", value, "seriename");
            return (Criteria) this;
        }

        public Criteria andSerienameLessThanOrEqualTo(String value) {
            addCriterion("SerieName <=", value, "seriename");
            return (Criteria) this;
        }

        public Criteria andSerienameLike(String value) {
            addCriterion("SerieName like", value, "seriename");
            return (Criteria) this;
        }

        public Criteria andSerienameNotLike(String value) {
            addCriterion("SerieName not like", value, "seriename");
            return (Criteria) this;
        }

        public Criteria andSerienameIn(List<String> values) {
            addCriterion("SerieName in", values, "seriename");
            return (Criteria) this;
        }

        public Criteria andSerienameNotIn(List<String> values) {
            addCriterion("SerieName not in", values, "seriename");
            return (Criteria) this;
        }

        public Criteria andSerienameBetween(String value1, String value2) {
            addCriterion("SerieName between", value1, value2, "seriename");
            return (Criteria) this;
        }

        public Criteria andSerienameNotBetween(String value1, String value2) {
            addCriterion("SerieName not between", value1, value2, "seriename");
            return (Criteria) this;
        }

        public Criteria andCpnameIsNull() {
            addCriterion("CPName is null");
            return (Criteria) this;
        }

        public Criteria andCpnameIsNotNull() {
            addCriterion("CPName is not null");
            return (Criteria) this;
        }

        public Criteria andCpnameEqualTo(String value) {
            addCriterion("CPName =", value, "cpname");
            return (Criteria) this;
        }

        public Criteria andCpnameNotEqualTo(String value) {
            addCriterion("CPName <>", value, "cpname");
            return (Criteria) this;
        }

        public Criteria andCpnameGreaterThan(String value) {
            addCriterion("CPName >", value, "cpname");
            return (Criteria) this;
        }

        public Criteria andCpnameGreaterThanOrEqualTo(String value) {
            addCriterion("CPName >=", value, "cpname");
            return (Criteria) this;
        }

        public Criteria andCpnameLessThan(String value) {
            addCriterion("CPName <", value, "cpname");
            return (Criteria) this;
        }

        public Criteria andCpnameLessThanOrEqualTo(String value) {
            addCriterion("CPName <=", value, "cpname");
            return (Criteria) this;
        }

        public Criteria andCpnameLike(String value) {
            addCriterion("CPName like", value, "cpname");
            return (Criteria) this;
        }

        public Criteria andCpnameNotLike(String value) {
            addCriterion("CPName not like", value, "cpname");
            return (Criteria) this;
        }

        public Criteria andCpnameIn(List<String> values) {
            addCriterion("CPName in", values, "cpname");
            return (Criteria) this;
        }

        public Criteria andCpnameNotIn(List<String> values) {
            addCriterion("CPName not in", values, "cpname");
            return (Criteria) this;
        }

        public Criteria andCpnameBetween(String value1, String value2) {
            addCriterion("CPName between", value1, value2, "cpname");
            return (Criteria) this;
        }

        public Criteria andCpnameNotBetween(String value1, String value2) {
            addCriterion("CPName not between", value1, value2, "cpname");
            return (Criteria) this;
        }

        public Criteria andGamekeyIsNull() {
            addCriterion("GameKey is null");
            return (Criteria) this;
        }

        public Criteria andGamekeyIsNotNull() {
            addCriterion("GameKey is not null");
            return (Criteria) this;
        }

        public Criteria andGamekeyEqualTo(String value) {
            addCriterion("GameKey =", value, "gamekey");
            return (Criteria) this;
        }

        public Criteria andGamekeyNotEqualTo(String value) {
            addCriterion("GameKey <>", value, "gamekey");
            return (Criteria) this;
        }

        public Criteria andGamekeyGreaterThan(String value) {
            addCriterion("GameKey >", value, "gamekey");
            return (Criteria) this;
        }

        public Criteria andGamekeyGreaterThanOrEqualTo(String value) {
            addCriterion("GameKey >=", value, "gamekey");
            return (Criteria) this;
        }

        public Criteria andGamekeyLessThan(String value) {
            addCriterion("GameKey <", value, "gamekey");
            return (Criteria) this;
        }

        public Criteria andGamekeyLessThanOrEqualTo(String value) {
            addCriterion("GameKey <=", value, "gamekey");
            return (Criteria) this;
        }

        public Criteria andGamekeyLike(String value) {
            addCriterion("GameKey like", value, "gamekey");
            return (Criteria) this;
        }

        public Criteria andGamekeyNotLike(String value) {
            addCriterion("GameKey not like", value, "gamekey");
            return (Criteria) this;
        }

        public Criteria andGamekeyIn(List<String> values) {
            addCriterion("GameKey in", values, "gamekey");
            return (Criteria) this;
        }

        public Criteria andGamekeyNotIn(List<String> values) {
            addCriterion("GameKey not in", values, "gamekey");
            return (Criteria) this;
        }

        public Criteria andGamekeyBetween(String value1, String value2) {
            addCriterion("GameKey between", value1, value2, "gamekey");
            return (Criteria) this;
        }

        public Criteria andGamekeyNotBetween(String value1, String value2) {
            addCriterion("GameKey not between", value1, value2, "gamekey");
            return (Criteria) this;
        }

        public Criteria andMonitorstateIsNull() {
            addCriterion("MonitorState is null");
            return (Criteria) this;
        }

        public Criteria andMonitorstateIsNotNull() {
            addCriterion("MonitorState is not null");
            return (Criteria) this;
        }

        public Criteria andMonitorstateEqualTo(Integer value) {
            addCriterion("MonitorState =", value, "monitorstate");
            return (Criteria) this;
        }

        public Criteria andMonitorstateNotEqualTo(Integer value) {
            addCriterion("MonitorState <>", value, "monitorstate");
            return (Criteria) this;
        }

        public Criteria andMonitorstateGreaterThan(Integer value) {
            addCriterion("MonitorState >", value, "monitorstate");
            return (Criteria) this;
        }

        public Criteria andMonitorstateGreaterThanOrEqualTo(Integer value) {
            addCriterion("MonitorState >=", value, "monitorstate");
            return (Criteria) this;
        }

        public Criteria andMonitorstateLessThan(Integer value) {
            addCriterion("MonitorState <", value, "monitorstate");
            return (Criteria) this;
        }

        public Criteria andMonitorstateLessThanOrEqualTo(Integer value) {
            addCriterion("MonitorState <=", value, "monitorstate");
            return (Criteria) this;
        }

        public Criteria andMonitorstateIn(List<Integer> values) {
            addCriterion("MonitorState in", values, "monitorstate");
            return (Criteria) this;
        }

        public Criteria andMonitorstateNotIn(List<Integer> values) {
            addCriterion("MonitorState not in", values, "monitorstate");
            return (Criteria) this;
        }

        public Criteria andMonitorstateBetween(Integer value1, Integer value2) {
            addCriterion("MonitorState between", value1, value2, "monitorstate");
            return (Criteria) this;
        }

        public Criteria andMonitorstateNotBetween(Integer value1, Integer value2) {
            addCriterion("MonitorState not between", value1, value2, "monitorstate");
            return (Criteria) this;
        }

        public Criteria andAutoprostateIsNull() {
            addCriterion("AutoProState is null");
            return (Criteria) this;
        }

        public Criteria andAutoprostateIsNotNull() {
            addCriterion("AutoProState is not null");
            return (Criteria) this;
        }

        public Criteria andAutoprostateEqualTo(Integer value) {
            addCriterion("AutoProState =", value, "autoprostate");
            return (Criteria) this;
        }

        public Criteria andAutoprostateNotEqualTo(Integer value) {
            addCriterion("AutoProState <>", value, "autoprostate");
            return (Criteria) this;
        }

        public Criteria andAutoprostateGreaterThan(Integer value) {
            addCriterion("AutoProState >", value, "autoprostate");
            return (Criteria) this;
        }

        public Criteria andAutoprostateGreaterThanOrEqualTo(Integer value) {
            addCriterion("AutoProState >=", value, "autoprostate");
            return (Criteria) this;
        }

        public Criteria andAutoprostateLessThan(Integer value) {
            addCriterion("AutoProState <", value, "autoprostate");
            return (Criteria) this;
        }

        public Criteria andAutoprostateLessThanOrEqualTo(Integer value) {
            addCriterion("AutoProState <=", value, "autoprostate");
            return (Criteria) this;
        }

        public Criteria andAutoprostateIn(List<Integer> values) {
            addCriterion("AutoProState in", values, "autoprostate");
            return (Criteria) this;
        }

        public Criteria andAutoprostateNotIn(List<Integer> values) {
            addCriterion("AutoProState not in", values, "autoprostate");
            return (Criteria) this;
        }

        public Criteria andAutoprostateBetween(Integer value1, Integer value2) {
            addCriterion("AutoProState between", value1, value2, "autoprostate");
            return (Criteria) this;
        }

        public Criteria andAutoprostateNotBetween(Integer value1, Integer value2) {
            addCriterion("AutoProState not between", value1, value2, "autoprostate");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("CreateTime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("CreateTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("CreateTime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("CreateTime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("CreateTime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CreateTime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("CreateTime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("CreateTime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("CreateTime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("CreateTime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("CreateTime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("CreateTime not between", value1, value2, "createtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CS_GameSeries
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CS_GameSeries
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}